 # SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-14 21:43-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../monkeysign/cli.py:23
msgid ""
"sign a key in a safe fashion.\n"
"\n"
"This command signs a key based on the fingerprint or user id\n"
"specified on the commandline, encrypt the result and mail it to the\n"
"user. This leave the choice of publishing the certification to that\n"
"person and makes sure that person owns the identity signed.\n"
"\n"
"This program assumes you have gpg-agent configured to prompt for\n"
"passwords."
msgstr ""

#: ../monkeysign/gtkui.py:38
msgid ""
"sign a key in a safe fashion using a webcam to scan for qr-codes\n"
"\n"
"This command will fire up a graphical interface and turn on the webcam\n"
"(if available) on this computer. It will also display a qr-code of\n"
"your main OpenPGP key.\n"
"\n"
"The webcam is used to capture an OpenPGP fingerprint represented as a\n"
"qrcode (or whatever the zbar library can parse) and then go through a\n"
"signing process.\n"
"\n"
"The signature is then encrypted and mailed to the user. This leave the\n"
"choice of publishing the certification to that person and makes sure\n"
"that person owns the identity signed.\n"
"\n"
"This program assumes you have gpg-agent configure to prompt for\n"
"passwords.\n"
msgstr ""

